================================
Python入門 Part2 (Numpyの使い方)
================================

PythonをMATLABやOctaveのような数値計算ソフトとして使いこなすために，
知っておくと良い基本的な内容について説明をする．
具体的には，NumPy，Matplotlibなどである．

数値計算ツールとしてのPython
============================

----------
配列の基礎
----------

+------------------+----------------------------------------------+
| ndarray.ndim     | 配列の次元数                                 |
+------------------+----------------------------------------------+
| ndarray.shape    | 配列の各次元のサイズ                         |
+------------------+----------------------------------------------+
| ndarray.size     | 配列に含まれる要素の総数                     |
+------------------+----------------------------------------------+
| ndarray.dtype    | 配列に含まれる要素の型を記述するオブジェクト |
+------------------+----------------------------------------------+
| ndarray.itemsize | 配列の各要素のバイト数                       |
+------------------+----------------------------------------------+
| ndarray.data     | 配列の実際の要素を収容しているバッファ       |
+------------------+----------------------------------------------+

.. Pythonの世界では次元数はランクと呼ばれる。
.. これは各次元の配列長を表す整数から成るタプル。n行m列の行列の場合、shapeは(n,m)となる。故に、shapeタプルの長さはランク、すなわち次元数 ndim である。
.. これはshapeの要素すべての積に等しい。
.. dtypeは、標準Python型を用いて作成もしくは指定することができる上、NumPyも独自の型（numpy.int32, numpy.int16, numpy.float64, etc.）を追加している。
.. 例えば、float64型の要素から成る配列の場合、itemsizeは8 (=64/8) で、complex32型のものであれば itemsizeは4 (=32/8) である。これはndarray.dtype.itemsizeと等価である。
.. 配列の要素には添字機能を用いてアクセスできるので、普通はこの属性を用いる必要はないだろう。

------------
配列の初期化
------------

:download:`ex_array_init.py <./py/02/ex_array_init.py>`

.. literalinclude:: py/02/ex_array_init.py

----------
配列の操作
----------

:download:`ex_array_op.py <./py/02/ex_array_op.py>`

.. literalinclude:: py/02/ex_array_op.py

.. Note::

    Numpyのいただけない点の1つに，この配列の扱いがある．
    Numpyでは，1次元配列には，列ベクトルと行ベクトルの区別がなく，
    常に行ベクトルとして扱われる．
    たまに，複数の縦ベクトルのmeanが行ベクトルになったりする．
    MATLAB使いとしては猛烈に不満だが，仕方ない．
    今後，縦ベクトル単体を明示的に扱いたいときは，
    2次元配列として表現するように注意する．
    行列演算をしたい時は、2次元配列しか扱わないようにすると良い．
    こまめにshapeを確認して，ベクトルの方向を気にする習慣をつけよう．

----------
グラフ表示
----------

:download:`ex_plot.py <./py/02/ex_plot.py>`

.. literalinclude:: py/02/ex_plot.py

詳細な設定方法に関しては， `ココ <http://www.ike-dyn.ritsumei.ac.jp/~uchida/scipy-lecture-notes/intro/matplotlib/matplotlib.html>`_ を参照のこと．

------------------
ファイルの読み書き
------------------

:download:`ex_file_io.py <./py/02/ex_file_io.py>`

.. literalinclude:: py/02/ex_file_io.py

2次元正規分布の描画 (演習2.2)
=============================

:download:`ex_gaussian_2d.py <./py/02/ex_gaussian_2d.py>`

.. literalinclude:: py/02/ex_gaussian_2d.py

宿題
====

